<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.background.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.background.pojo.User" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="parent_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="realname" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="username" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="identity_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="bank_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="question" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="answer" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="role" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="rate" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, parent_id, realname, username, password, phone, identity_id, bank_id, question, 
    answer, role, rate, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.background.pojo.User" >
    insert into user (id, parent_id, realname, 
      username, password, phone, 
      identity_id, bank_id, question, 
      answer, role, rate, create_time,
      update_time)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{realname,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{identityId,jdbcType=VARCHAR}, #{bankId,jdbcType=VARCHAR}, #{question,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{role,jdbcType=INTEGER}, #{rate,jdbcType=DOUBLE}, now(),
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.background.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="identityId != null" >
        identity_id,
      </if>
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="question != null" >
        question,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="identityId != null" >
        #{identityId,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null" >
        #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="question != null" >
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        now(),
      </if>
      <if test="updateTime != null" >
        now(),
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.background.pojo.User" >
    update user
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="identityId != null" >
        identity_id = #{identityId,jdbcType=VARCHAR},
      </if>
      <if test="bankId != null" >
        bank_id = #{bankId,jdbcType=VARCHAR},
      </if>
      <if test="question != null" >
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = now(),
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.background.pojo.User" >
    update user
    set parent_id = #{parentId,jdbcType=INTEGER},
      realname = #{realname,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      identity_id = #{identityId,jdbcType=VARCHAR},
      bank_id = #{bankId,jdbcType=VARCHAR},
      question = #{question,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      role = #{role,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="checkUsername" resultType="int" parameterType="String">
    select count(1)
    from user
    where username = #{username}
  </select>

  <select id="checkPhone" resultType="int" parameterType="String">
    select count(1) from user
    where phone = #{phone}
  </select>

  <select id="selectLogin" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username}
    and password = #{password}
  </select>

  <select id="selectQuestionByUsername" resultType="string" parameterType="string">
    select question
    from user
    where username = #{username}
  </select>

  <select id="checkAnswer" resultType="int" parameterType="map">
    select count(1)
    from user
    where username = #{username}
    and question = #{question}
    and qnswer = #{answer}
  </select>

  <select id="updatePasswordByUsername" resultType="int" parameterType="map">
    update user
    set password = #{passwordNew},update_time = now()
    where username = #{username}
  </select>

  <select id="checkPassword" resultType="int" parameterType="map">
    select count(1)
    from user
    where id = #{userId}
    and password = #{password}
  </select>

  <select id="checkPhoneByUserId" resultType="int" parameterType="map">
    select count(1)
    from user
    where phone = #{phone}
    and id != #{userId}
  </select>

  <select id="selectList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where parent_id = #{userID}
    order by id asc
  </select>

  <select id="selectUserChildrenByParentId" resultMap="BaseResultMap" parameterType="map">
    select <include refid="Base_Column_List"/>
    from user
    <where>
    1=1
        <if test="null != userID and '' != userID">
         and parent_id = #{userID}
        </if>
        <if test="null != realname and '' != realname">
          and realname = #{realname}
        </if>
        <if test="null != role and '' != role">
          and role = #{role}
        </if>
    </where>
  </select>

  <select id="selectByRealname" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user
    where realname = #{realname}
  </select>

  <select id="selectUserByIdList" resultMap="BaseResultMap" parameterType="list">
    select <include refid="Base_Column_List"/>
    from user
    <where>
      id in
      <foreach collection="idList" index="index" item="item" separator="," open="(" close=")">
        (#{item})
      </foreach>
    </where>
  </select>
</mapper>